
@{
    ViewBag.Title = "Returns";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Returns</h2>


<form id="newRental" action="">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input name="customer"id="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control"/>
        </div>
    </div>
    
    
    
    <div class="form-group">
        <div id="movies" class="row">
           
        </div>
        <div class="row">
        
        </div>
    </div>
    <div class="form-group">
        <div>
            <button id="submit" class="btn btn-primary">Submit</button>
        </div>
    </div>
</form>

@section scripts
{@Scripts.Render("~/bundles/jqueryval")
    <script>

        $(document).ready(function() {
            var documentcontext = $(this);
            var name;
            var listcontext = [];
            var vm = {
                movieIds: []
            };
            var customerid;
            var returnRentatDto = [];
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                //prefetch: '../data/films/post_1960.json',
                remote: {
                    url: '../api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                    minLength: 3,
                    highlight: true
                },
                {
                    name: 'customers',
                    display: 'name',
                    source: customers
                }).on("typeahead:select",
                function(e, customer) {
                    vm.customerId = customer.id;
                    name = customer.name;
                });


            function updateRentalfunc(dataInput) {

                var returnsDto = [];


                //  dataInput[i].length 14

                for (var i = 0; i < listcontext.length; i++) {
                    // console.log(listcontext.length);14
                    var list = listcontext[i];
                    if ($(list.children()[3]).find("input").val())
                        dataInput[i].dateReturned =
                            moment($(list.children()[3]).find("input").val(), "MM-DD-YYYY hh:mm A")
                            .format('YYYY-MM-DDTHH:mm:ss.SSS');;


                    delete dataInput[i].id;
                    var id = $(list.children()[3]).data("internalid");
                    bootbox.confirm("Are you sure?",function(result) {
                        if (result) {
                            $.ajax({
                                url: "/api/returns/" + id,
                                method: "PUT",
                                data: dataInput[i]
                            }).done(function(success) {
                        
                                toastr.success("Rentals successfully recorded");
                       
                           
                       

                            }).fail(function(error) {
                                toastr.success("Something wrong happened");
                            });
                        }
                    });
                    
                    // console.log(dataInput[i]);


                };
                // console.log(dataInput);
            };

            $.validator.addMethod("validCustomer",
                function() {
                    return vm.customerId && vm.customerId !== 0;
                },
                "Please select valid customer");
            $("#submit").click(
                function submitCustomer(e) {
                    e.preventDefault();


                    $.ajax({
                        url: "/api/Returns?customerName=" + name,
                        method: "GET"


                    }).done(function(dataInput) {
                        var vardateReturned =
                            " <div class='input-group date dateReturned'><input data-format=" +
                                "\"yyyy-MM-dd hh:mm:ss\"" +
                                " type='text' class='form-control' />" +
                                "<span class='input-group-addon'>" +
                                " <span class='glyphicon glyphicon-calendar'></span>" +
                                "  </span>" +
                                " </div>";

                        var vardateRented =
                            " <div class='input-group date dateRented'><input type='text' class='form-control' />" +
                                "<span class='input-group-addon'>" +
                                " <span class='glyphicon glyphicon-calendar'></span>" +
                                "  </span>" +
                                " </div>";
                        var currentlist;
                        // <div class="col-md-4">.col-md-4</div>
                        for (var index = 0; index < dataInput.length; index++) {
                            var coloumn = $("<div></div>");
                            coloumn.addClass("col col-sm-4 col-md-4 col-xs-4");
                            var lists = $("<ul></ul>");
                            lists.addClass("list-group");
                            coloumn.append(lists);
                            //  console.log(dataInput);
                            lists.append('<li class="list-group-item" data-internalid=' +
                                dataInput[index].customer.id +
                                '>' +
                                dataInput[index].customer.name +
                                '</li>');
                            lists.append('<li class="list-group-item" data-internalid=' +
                                dataInput[index].movie.id +
                                '>' +
                                dataInput[index].movie.name +
                                '</li>');
                            lists.append('<li class="list-group-item" data-internalid=' +
                                dataInput[index].dateRented +
                                ' data-internalindex=' +
                                index +
                                '>' +
                                isoDateReviver(dataInput[index].dateRented) +
                                '</li>');
                            if (dataInput[index].dateReturned == null)
                                lists.append('<li class="list-group-item"  data-internalid=' +
                                    dataInput[index].id +
                                    '>' +
                                    vardateReturned +
                                    '</li>');
                            else
                                lists.append('<li class="list-group-item" data-internalid=' +
                                    dataInput[index].id +
                                    '>' +
                                    isoDateReviver(dataInput[index].dateReturned) +
                                    '</li>');

                            $(".dateReturned").attr("id", index);
                            listcontext.push(lists);
                            currentlist = lists;
                            $("#movies").append(coloumn);
                            var dateReturn = $('#' + index);
                            //if (dataInput[index].dateReturned == null) {

                            //    $("#"+index).data("DateTimePicker").minDate(Date.now().toUTCString, true);
                            //}


                         //   console.log($('#' + index));
                            //if (dataInput[index].dateReturned == null)
                            //    dateReturn.val = new Date();
                            //else
                            //    dateReturn.data("DateTimePicker").date((moment(new Date(dataInput[index].dateReturned)).utc()
                            //        .format("MM-DD-YYYY hh:mm A")));


                            var dateRent = $(".dateRented");

                          //  console.log((dataInput[index].dateReturned));
                          //  console.log((moment(dataInput[index].dateReturned).utc()
                            //    .format("MM/DD/YYYY hh:mm A")));
                            dateRent.val = new Date(parseInt(dataInput[index].dateRented.substr(6)));

                        }
                        $(".dateRented").datetimepicker();
                        $(".dateReturned").datetimepicker();


                        // $(".dateReturned").data("DateTimePicker").minDate(Date.now().toUTCString,true);
                        // $(".dateReturned").data("DateTimePicker").defaultDate(Date.now().toUTCString,true);

                        var context = $(this);
                        $(".dateReturned").on("dp.change",
                            function(e) {
                                var index = $(currentlist.children()[2]).data("internalindex");
                                var id = $(currentlist.children()[2]).data("internalid");
                                returnRentatDto = {
                                    customerid: dataInput[index].customer.id,
                                    movieid: dataInput[index].movie.id,
                                    dateRented: dataInput[index].dateRented,
                                    datereturned: new Date(e.timeStamp)
                                };
                                $("#submit").unbind("click");
                                $("#submit").bind("click",
                                    function updateCustomer(e) {
                                        e.preventDefault();
                                        // console.log("called");
                                        updateRentalfunc(dataInput);
                                    });
                                //console.log(returnRentatDto);
                                $("#submit").html("Update");
                                $("#newRental").attr("id", "updateRental");
                            });

                        //(document).getElementById("#movies").removeChild("li");
                    }).fail(function() {
                        toastr.success("Something wrong happened");

                    });
                    return false;
                }
            );

            function isoDateReviver(value) {
                if (typeof value === 'string') {
                    var a = /^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)(?:([\+-])(\d{2})\:(\d{2}))?Z?$/
                        .exec(value);
                    if (a) {
                        var utcMilliseconds = Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4], +a[5], +a[6]);
                        return new Date(utcMilliseconds);
                    }
                }
                return value;
            }


        });


    </script>

}
window.location.replace('/rentals/new');