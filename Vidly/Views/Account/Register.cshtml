@model Vidly.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register";
}


<div   class="row justify-content-center">
<div  class="col-xs-6 col-xs-offset-2">
    <div class="card align-self-center" style="width: 23rem;background-color: rgba(52,58,64,0.25);">

        <div class="card-body">
            <h4 style="text-align: center" class="card-title">Register</h4>
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new {@class = "form-horizontal", role = "form", id = "parentform" }))
            {




                @Html.AntiForgeryToken()
                
                <hr/>
                @Html.ValidationSummary(true,"Please fix following errors", new {@class = "text-danger"})
                <div class="row">
                    <div class="form-group col">


                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @placeholder = "First Name", @id = "fname" })
                        @Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "text-danger" })

                    </div> 
                    <div class="form-group col">


                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Last Name", @id = "lname" })
                        @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "text-danger" })

                    </div>

                </div>
                

                <div  class="form-group">
                   

                    @Html.TextBoxFor(m => m.Email, new {@class = "form-control",@placeholder="E-Mail",@id="email"})
                    @Html.ValidationMessageFor(m=>m.Email,null,new{@class = "text-danger"})

                </div>
                <div class="form-group">
                    

                    @Html.PasswordFor(m => m.Password, new {@class = "form-control",@placeholder="Password",
                   @id = "password"})
                    @Html.ValidationMessageFor(m=>m.Password,null,new{@class = "text-danger"})

                </div>
                <div class="form-group">
                   

                    @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control",@placeholder="Confirm Password", @id = "confirmpassword" })
                    @Html.ValidationMessageFor(m=>m.ConfirmPassword, null,new{@class = "text-danger"})
                </div>
                <div class="form-group">
                  

                    @Html.TextBoxFor(m => m.DrivingLicense, new {@class = "form-control",@placeholder="Driving License"})
                    @Html.ValidationMessageFor(m => m.DrivingLicense, null, new { @class = "text-danger", @id = "drivinglicense" })
                </div>
                <div class="form-group">
                    

                    @Html.TextBoxFor(m => m.PhoneNumber, new {@class = "form-control",@placeholder="Phone Number", @id = "phonenumber" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <div>
                        <input type="submit" class="btn btn-dark form-control" value="Register"/>
                    </div>
                </div>
            }
            
        </div>
    </div>
</div>
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {


            $("#parentform").find("input.form-control").each(function(key, value) {
                if ($(value).attr("id") !== undefined) {

                    var element = $(value).attr("id");
                    required(element);
                   
                    putclose(element);
                    if ($(value).attr("id") !== "email") {
                        toggleicon($(value).attr("id"));
                    } 
                }
                function toggleicon(elementid) {
                    $("#" + elementid).focusin(function() {
                        if (!$(this).siblings("#close"+elementid).hasClass("ion-alert")) {
                            $(this).siblings("#close" + elementid).show();
                        }
                        
                         
                    }).focusout(function() {
                        if (!$(this).siblings("#close" + elementid).hasClass("ion-alert")) {
                            $(this).siblings("#close" + elementid).fadeOut();
                           
                        }
                        
                         
                    });  
                };
            });
            $("#email").blur(function () {
                var _this = $(this);


                function addcloseontype(context) {
                    $(context).next().removeClass().addClass("ion-backspace").css("color", "darkgray");
                         
                }
                if ($(this).val().length >0 && !$(this).hasClass("input-validation-error")) {
                    $.ajax({
                        url: "/api/users?email=" + $(this).val(),
                        method: "GET"

                    }).success(function (success) {
                        if (success === "Email Exists") {
                            $(_this).one("keyup",
                                function () {
                                    addcloseontype(_this);
                                });
                             
                            $(_this).siblings("#closeemail").removeClass().addClass("ion-alert").css("color", "red").data("toggle",
                                "tooltip").data("placement", "top").attr("placement", "top").attr("title", "Email already registered").hover(function (e) {
                                    $(this).removeClass("ion-alert").addClass("ion-backspace");
                                }, function () {
                                    $(this).removeClass("ion-backspace").addClass("ion-alert");
                                });
                            $('[data-toggle="tooltip"]').tooltip();
                             //  data-toggle="tooltip" data-placement="top" title="Tooltip on top"
                            //$(userexistIcon).insertAfter(_this);
                        } if (success === "Email Available") {
                            $(_this).one("keyup",
                                function () {
                                    addcloseontype(_this);
                                    
                                });
                          
                            $(_this).siblings("#closeemail").removeClass().addClass("ion-checkmark-round").css("color", "lightgreen").hover(function(e) {
                                $(this).removeClass("ion-checkmark-round").addClass("ion-backspace");
                            },function() {
                                $(this).removeClass("ion-backspace").addClass("ion-checkmark-round");
                            });
                           
                        }
                        
                    }).fail(function(error) {
                         
                    });
                }
            });
            
            function required(element) {
                var inputElementid = "#" + element;
                
                if (($(inputElementid).data("val-required")) || $(inputElementid).data("val-equalto")) {
                    $(inputElementid).attr("placeholder", $(inputElementid).attr("placeholder") + "*");
                }
            }
             
            function putclose(inputElement) {
                var inputElementid = "#" + inputElement;
                var closeiconid = "#close" + inputElement;
                var parentid = $(inputElementid).parent();
                $(parentid).css('position', 'relative');
                $(parentid).on("click",
                    closeiconid,
                    function() {

                        $(inputElementid).val('');
                        $(closeiconid).fadeOut(function() {
                            $(this).remove();
                        });
                    });
                
                $(inputElementid).on("keyup",
                    function() {

                        if (($(inputElementid).val().length > 0)) {
                            if ($(closeiconid).length) {
                               
                                $(closeiconid).remove();
                           }
                            var closeIcon = $((document).createElement("span")).addClass("ion-backspace")
                                .attr('id', 'close' + inputElement).css({
                                    "position": "absolute",
                                    "top": "0",
                                    "bottom": "0",
                                    "height": "25px",
                                    "right": "20px",
                                    "margin-top": "5px",
                                    "font-size": "120%",
                                    "cursor": "pointer",
                                    "color": "darkgray",
                                    "transition":"color .6s"
                                }).hover(function(e) {
                                    $(this).css("color", e.type === "mouseenter" ? "black" : "darkgray");
                                });
                            $(closeIcon).insertAfter((inputElementid));

                        }
                        if (($(inputElementid).val().length === 0)  ) {
                            $(closeiconid).remove();
                        }
                    });
            }


        });

    </script>
}
